# This simulation aims to show a buffer overrun vulnerability in low-level languages.
# In high-level languages like Ruby, such vulnerabilities are usually prevented by the language itself.

def vulnerable_method(user_input)
    buffer = "1234567890" # A buffer with limited size
    buffer_length = buffer.length
  
    # Copy user input into the buffer without boundary checks
    user_input.each_char.with_index do |char, index|
      buffer[index] = char if index < buffer_length
    end
  
    # Attempt to convert the modified buffer to a float
    float_value = buffer.to_f
  
    # This part of the code is never reached in this simulation
    puts "Converted float value: #{float_value}"
  end
  
  # User input (simulating malicious input)
  user_input = "1" * 20
  
  # Call the vulnerable method with the user input
  vulnerable_method(user_input)
  